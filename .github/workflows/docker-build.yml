name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: halleyassistau/docker-phpmyadmin

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image for testing
      run: docker build -t phpmyadmin-ssl-test .

    - name: Run container for testing
      run: |
        # Start container in background
        docker run -d --name phpmyadmin-test -p 8080:80 -p 8443:443 phpmyadmin-ssl-test
        
        # Wait for container to start
        sleep 10
        
        # Check if container is running
        docker ps

    - name: Test HTTP endpoint (should redirect to HTTPS)
      run: |
        # Test HTTP redirect - should get 301/302 redirect response
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/ || echo "000")
        echo "HTTP Status: $HTTP_STATUS"
        if [[ "$HTTP_STATUS" =~ ^30[1-8]$ ]]; then
          echo "✓ HTTP correctly redirects to HTTPS"
        else
          echo "✗ HTTP did not redirect properly (expected 30x, got $HTTP_STATUS)"
          exit 1
        fi

    - name: Test HTTPS endpoint (should serve phpMyAdmin)
      run: |
        # Test HTTPS endpoint - should get 200 OK and contain phpMyAdmin content
        HTTPS_RESPONSE=$(curl -s -k https://localhost:8443/ || echo "")
        HTTPS_STATUS=$(curl -s -k -o /dev/null -w "%{http_code}" https://localhost:8443/ || echo "000")
        echo "HTTPS Status: $HTTPS_STATUS"
        echo "Response contains phpMyAdmin: $(echo "$HTTPS_RESPONSE" | grep -i "phpmyadmin" >/dev/null && echo "Yes" || echo "No")"
        
        if [[ "$HTTPS_STATUS" == "200" ]] && echo "$HTTPS_RESPONSE" | grep -i "phpmyadmin" >/dev/null; then
          echo "✓ HTTPS correctly serves phpMyAdmin"
        else
          echo "✗ HTTPS did not serve phpMyAdmin properly"
          echo "Response preview:"
          echo "$HTTPS_RESPONSE" | head -10
          exit 1
        fi

    - name: Show container logs
      if: always()
      run: docker logs phpmyadmin-test

    - name: Cleanup
      if: always()
      run: |
        docker stop phpmyadmin-test || true
        docker rm phpmyadmin-test || true

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry
      run: echo "${{ secrets.dockerhub_token }}" | docker login -u splitice --password-stdin

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=git-${github.sha}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max